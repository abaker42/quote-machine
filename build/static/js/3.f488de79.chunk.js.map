{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","onFocus","console","log","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","NewQuote","useHttp","addQuote","sendRequest","status","navigate","useNavigate","useEffect","replace","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,mB,qBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,2B,mFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAK,SAAEH,EAAMI,UAC9C,E,yBCuEeC,EApEG,SAACL,GAClB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBA8BrB,OACC,cAAC,WAAQ,UAOR,cAAC,EAAI,UACJ,uBACCE,QA1BoB,WAWvBC,QAAQC,IACP,kEAEF,EAaIV,UAAWC,IAAQU,KACnBC,SAvCJ,SAA2BC,GAC1BA,EAAMC,iBAEN,IAAMC,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcX,EAAaS,QAAQC,MAIzClB,EAAMoB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACjD,EA8BgC,UAC3BnB,EAAMuB,WACN,qBAAKtB,UAAWC,IAAQsB,QAAQ,SAC/B,cAACC,EAAA,EAAc,MAIjB,sBAAKxB,UAAWC,IAAQwB,QAAQ,UAC/B,uBAAOC,QAAQ,SAAQ,oBACvB,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKxB,OAErC,sBAAKL,UAAWC,IAAQwB,QAAQ,UAC/B,uBAAOC,QAAQ,OAAM,kBACrB,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKtB,OAEnC,qBAAKP,UAAWC,IAAQ8B,QAAQ,SAC/B,wBAAQ/B,UAAU,MAAK,+BAM7B,E,gBC/CegC,UApBE,WAChB,MAAgCC,YAAQC,KAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACfC,EAAWC,cAEjBC,qBAAU,WACM,cAAXH,GACHC,EAAS,YAAa,CAAEG,SAAS,GAEnC,GAAG,CAACJ,EAAQC,IAOZ,OACC,cAAC,EAAS,CAACf,UAAsB,YAAXc,EAAsBjB,WANtB,SAACsB,GACvBN,EAAYM,GACZhC,QAAQC,IAAI+B,EACb,GAKD,C","file":"static/js/3.f488de79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2UM73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2WXRY\",\"loading\":\"QuoteForm_loading__3VjWh\",\"control\":\"QuoteForm_control__y8NOh\",\"actions\":\"QuoteForm_actions__1IqRl\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef } from 'react';\n//import { usePrompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\tconst authorInputRef = useRef();\n\tconst textInputRef = useRef();\n\t//const [isTouched, setIsTouched] = useState(false);\n\n\tfunction submitFormHandler(event) {\n\t\tevent.preventDefault();\n\n\t\tconst enteredAuthor = authorInputRef.current.value;\n\t\tconst enteredText = textInputRef.current.value;\n\n\t\t// optional: Could validate here\n\n\t\tprops.onAddQuote({ author: enteredAuthor, text: enteredText });\n\t}\n\n\tconst handleFormFocus = () => {\n\t\t/**Since react router dom doesn't support the Prompt component\n\t\t * or usePrompt or useBlock hooks we have no clear work around\n\t\t * for prompting the user to stop upon exiting form page once\n\t\t * touched\n\t\t */\n\t\t//setIsTouched(true);\n\t\t// usePrompt(\n\t\t// \t'Are you sure you want to leave? All data in form will be lost!',\n\t\t// \tisTouched\n\t\t// );\n\t\tconsole.log(\n\t\t\t'Just logging here since there no workaround for usePrompt in v6'\n\t\t);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{/* <Prompt\n\t\t\t\twhen={isTouched}\n\t\t\t\tmessage={(location) =>\n\t\t\t\t\t''\n\t\t\t\t}\n\t\t\t/> */}\n\t\t\t<Card>\n\t\t\t\t<form\n\t\t\t\t\tonFocus={handleFormFocus}\n\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\tonSubmit={submitFormHandler}>\n\t\t\t\t\t{props.isLoading && (\n\t\t\t\t\t\t<div className={classes.loading}>\n\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='author'>Author</label>\n\t\t\t\t\t\t<input type='text' id='author' ref={authorInputRef} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor='text'>Text</label>\n\t\t\t\t\t\t<textarea id='text' rows='5' ref={textInputRef}></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t\t<button className='btn'>Add Quote</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n\tconst { sendRequest, status } = useHttp(addQuote);\r\n\tconst navigate = useNavigate();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (status === 'completed') {\r\n\t\t\tnavigate('../quotes', { replace: true });\r\n\t\t}\r\n\t}, [status, navigate]);\r\n\r\n\tconst handleAddQuote = (quoteData) => {\r\n\t\tsendRequest(quoteData);\r\n\t\tconsole.log(quoteData);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<QuoteForm isLoading={status === 'pending'} onAddQuote={handleAddQuote} />\r\n\t);\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}