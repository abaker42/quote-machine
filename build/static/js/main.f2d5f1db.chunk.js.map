{"version":3,"sources":["components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.js","components/UI/LoadingSpinner.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/layout/Layout.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","NoQuotesFound","noquotes","CommentItem","props","item","text","CommentsList","comments","map","comment","NewCommentForm","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentNotify","console","log","length","onClick","active","dat","isActive","MainNavigation","header","logo","nav","to","Layout","main","children","QuoteItem","author","QuoteList","quotes","ascending","history","useNavigate","location","useLocation","sortAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","list","quote","AllQuotes","loadedQuotes","NewQuote","React","lazy","QuoteDetails","NotFound","App","fallback","exact","path","element","replace","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f2d5f1db.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\r\n\r\nfunction httpReducer(state, action) {\r\n\tif (action.type === 'SEND') {\r\n\t\treturn {\r\n\t\t\tdata: null,\r\n\t\t\terror: null,\r\n\t\t\tstatus: 'pending',\r\n\t\t};\r\n\t}\r\n\r\n\tif (action.type === 'SUCCESS') {\r\n\t\treturn {\r\n\t\t\tdata: action.responseData,\r\n\t\t\terror: null,\r\n\t\t\tstatus: 'completed',\r\n\t\t};\r\n\t}\r\n\r\n\tif (action.type === 'ERROR') {\r\n\t\treturn {\r\n\t\t\tdata: null,\r\n\t\t\terror: action.errorMessage,\r\n\t\t\tstatus: 'completed',\r\n\t\t};\r\n\t}\r\n\r\n\treturn state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n\tconst [httpState, dispatch] = useReducer(httpReducer, {\r\n\t\tstatus: startWithPending ? 'pending' : null,\r\n\t\tdata: null,\r\n\t\terror: null,\r\n\t});\r\n\r\n\tconst sendRequest = useCallback(\r\n\t\tasync function (requestData) {\r\n\t\t\tdispatch({ type: 'SEND' });\r\n\t\t\ttry {\r\n\t\t\t\tconst responseData = await requestFunction(requestData);\r\n\t\t\t\tdispatch({ type: 'SUCCESS', responseData });\r\n\t\t\t} catch (error) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'ERROR',\r\n\t\t\t\t\terrorMessage: error.message || 'Something went wrong!',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\t[requestFunction]\r\n\t);\r\n\r\n\treturn {\r\n\t\tsendRequest,\r\n\t\t...httpState,\r\n\t};\r\n}\r\n\r\nexport default useHttp;\r\n","const FIREBASE_DOMAIN = 'https://react-http-30b70-default-rtdb.firebaseio.com';\r\n\r\nexport async function getAllQuotes() {\r\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n\tconst data = await response.json();\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow new Error(data.message || 'Could not fetch quotes.');\r\n\t}\r\n\r\n\tconst transformedQuotes = [];\r\n\r\n\tfor (const key in data) {\r\n\t\tconst quoteObj = {\r\n\t\t\tid: key,\r\n\t\t\t...data[key],\r\n\t\t};\r\n\r\n\t\ttransformedQuotes.push(quoteObj);\r\n\t}\r\n\r\n\treturn transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n\tconst data = await response.json();\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow new Error(data.message || 'Could not fetch quote.');\r\n\t}\r\n\r\n\tconst loadedQuote = {\r\n\t\tid: quoteId,\r\n\t\t...data,\r\n\t};\r\n\r\n\treturn loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n\t\tmethod: 'POST',\r\n\t\tbody: JSON.stringify(quoteData),\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t});\r\n\tconst data = await response.json();\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow new Error(data.message || 'Could not create quote.');\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\nexport async function addComment(requestData) {\r\n\tconst response = await fetch(\r\n\t\t`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(requestData.commentData),\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t}\r\n\t);\r\n\tconst data = await response.json();\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow new Error(data.message || 'Could not add comment.');\r\n\t}\r\n\r\n\treturn { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n\tconst data = await response.json();\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow new Error(data.message || 'Could not get comments.');\r\n\t}\r\n\r\n\tconst transformedComments = [];\r\n\r\n\tfor (const key in data) {\r\n\t\tconst commentObj = {\r\n\t\t\tid: key,\r\n\t\t\t...data[key],\r\n\t\t};\r\n\r\n\t\ttransformedComments.push(commentObj);\r\n\t}\r\n\r\n\treturn transformedComments;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2ukMj\",\"logo\":\"MainNavigation_logo__11ekC\",\"nav\":\"MainNavigation_nav__1YfxB\",\"active\":\"MainNavigation_active__1wlc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3d3b2\",\"loading\":\"NewCommentForm_loading__3Ywom\",\"control\":\"NewCommentForm_control__3aEco\",\"actions\":\"NewCommentForm_actions__nHPvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__SMzws\",\"sorting\":\"QuoteList_sorting__2zeZQ\"};","import classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n\treturn (\n\t\t<div className={classes.noquotes}>\n\t\t\t<p>No quotes found!</p>\n\t\t\t<button className='btn'>Add a Quote</button>\n\t\t</div>\n\t);\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2gl06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__7RpZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__xCv4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2hqae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__Aw5zI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__eBOPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__FaI55\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n\tconst commentTextRef = useRef();\n\tconst { sendRequest, status, error } = useHttp(addComment);\n\tconst { onAddedComment } = props;\n\n\tuseEffect(() => {\n\t\tif (status === 'completed' && !error) {\n\t\t\tonAddedComment();\n\t\t}\n\t}, [status, error, onAddedComment]);\n\n\tconst submitFormHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tconst enteredText = commentTextRef.current.value;\n\n\t\t// optional: Could validate here\n\n\t\tsendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n\t};\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={submitFormHandler}>\n\t\t\t{status === 'pending' && (\n\t\t\t\t<div className='centered'>\n\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className={classes.control} onSubmit={submitFormHandler}>\n\t\t\t\t<label htmlFor='comment'>Your Comment</label>\n\t\t\t\t<textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n\t\t\t</div>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button className='btn'>Add Comment</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n\tconst [isAddingComment, setIsAddingComment] = useState(false);\n\tconst params = useParams();\n\tconst { quoteId } = params;\n\tconst { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n\tuseEffect(() => {\n\t\tsendRequest(quoteId);\n\t}, [quoteId, sendRequest]);\n\n\tconst startAddCommentHandler = () => {\n\t\tsetIsAddingComment(true);\n\t};\n\n\tconst addedCommentNotify = useCallback(() => {\n\t\tconsole.log('notified');\n\t\tsendRequest(quoteId);\n\t}, [sendRequest, quoteId]);\n\n\tlet comments;\n\n\tif (status === 'pending') {\n\t\tcomments = (\n\t\t\t<div className='centered'>\n\t\t\t\t<LoadingSpinner />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (status === 'completed' && loadedComments && loadedComments.length > 0) {\n\t\tcomments = <CommentsList comments={loadedComments} />;\n\t}\n\n\tif (\n\t\tstatus === 'completed' &&\n\t\t(!loadedComments || loadedComments.length === 0)\n\t) {\n\t\tcomments = <p className='centered'>No Comments Added Yet!</p>;\n\t}\n\n\treturn (\n\t\t<section className={classes.comments}>\n\t\t\t<h2>User Comments</h2>\n\t\t\t{!isAddingComment && (\n\t\t\t\t<button className='btn' onClick={startAddCommentHandler}>\n\t\t\t\t\tAdd a Comment\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t{isAddingComment && (\n\t\t\t\t<NewCommentForm quoteId={quoteId} onAddedComment={addedCommentNotify} />\n\t\t\t)}\n\t\t\t{comments}\n\t\t</section>\n\t);\n};\n\nexport default Comments;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst active = (dat) => (dat.isActive ? classes.active : '');\r\nconst MainNavigation = () => {\r\n\treturn (\r\n\t\t<header className={classes.header}>\r\n\t\t\t<div className={classes.logo}>Great Quotes</div>\r\n\t\t\t<nav className={classes.nav}>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink to='quotes' className={active}>\r\n\t\t\t\t\t\t\tAll Quotes\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<NavLink to='new-quote' className={active}>\r\n\t\t\t\t\t\t\tAdd Quotes\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Fragment } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nconst Layout = (props) => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<MainNavigation />\r\n\t\t\t<main className={classes.main}>{props.children}</main>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default Layout;\r\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n\treturn (\n\t\t<li className={classes.item}>\n\t\t\t<figure>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<p>{props.text}</p>\n\t\t\t\t</blockquote>\n\t\t\t\t<figcaption>{props.author}</figcaption>\n\t\t\t</figure>\n\t\t\t<Link to={`${props.id}`} className='btn'>\n\t\t\t\tView Fullscreen\n\t\t\t</Link>\n\t\t</li>\n\t);\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n\treturn quotes.sort((quoteA, quoteB) => {\n\t\tif (ascending) {\n\t\t\treturn quoteA.author > quoteB.author ? 1 : -1;\n\t\t} else {\n\t\t\treturn quoteA.author < quoteB.author ? 1 : -1;\n\t\t}\n\t});\n};\n\nconst QuoteList = (props) => {\n\tconst history = useNavigate(); //useHistory is deprecated in reacr router dom\n\tconst location = useLocation();\n\tconst queryParams = new URLSearchParams(location.search);\n\tconst sortAscending = queryParams.get('sort') === 'asc';\n\tconst sortedQuotes = sortQuotes(props.quotes, sortAscending);\n\n\tconst handleSorting = () => {\n\t\thistory('/quotes?sort=' + (sortAscending ? 'desc' : 'asc'));\n\t};\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className={classes.sorting}>\n\t\t\t\t<button onClick={handleSorting}>\n\t\t\t\t\tSort {sortAscending ? 'Descending' : 'Ascending'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul className={classes.list}>\n\t\t\t\t{sortedQuotes.map((quote) => (\n\t\t\t\t\t<QuoteItem\n\t\t\t\t\t\tkey={quote.id}\n\t\t\t\t\t\tid={quote.id}\n\t\t\t\t\t\tauthor={quote.author}\n\t\t\t\t\t\ttext={quote.text}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</Fragment>\n\t);\n};\n\nexport default QuoteList;\n","import React, { useEffect } from 'react';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n\tconst {\r\n\t\tsendRequest,\r\n\t\tstatus,\r\n\t\tdata: loadedQuotes,\r\n\t\terror,\r\n\t} = useHttp(getAllQuotes, true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest();\r\n\t}, [sendRequest]);\r\n\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className='centered'>\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (error) {\r\n\t\t<p className='centered focus'>{error}</p>;\r\n\t}\r\n\r\n\tif (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n\t\treturn <NoQuotesFound />;\r\n\t}\r\n\treturn <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import React, { Suspense } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport Comments from './components/comments/Comments';\nimport Layout from './components/layout/Layout';\nimport LoadingSpinner from './components/UI/LoadingSpinner';\nimport AllQuotes from './pages/AllQuotes';\n//import NewQuote from './pages/NewQuote';\n//import NotFound from './pages/NotFound';\n//import QuoteDetails from './pages/QuoteDetails';\n\nconst NewQuote = React.lazy(() => import('./pages/NewQuote'));\nconst QuoteDetails = React.lazy(() => import('./pages/QuoteDetails'));\nconst NotFound = React.lazy(() => import('./pages/NotFound'));\nfunction App() {\n\treturn (\n\t\t<Layout>\n\t\t\t<Suspense\n\t\t\t\tfallback={\n\t\t\t\t\t<div className='centered'>\n\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t</div>\n\t\t\t\t}>\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route exact path='/' element={<Navigate replace to='/quotes' />} />\n\t\t\t\t\t<Route exact path='quotes' element={<AllQuotes />} />\n\t\t\t\t\t<Route path='quotes/:quoteId' element={<QuoteDetails />}>\n\t\t\t\t\t\t<Route path='comments' element={<Comments />} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/new-quote' element={<NewQuote />} />\n\t\t\t\t\t<Route path='*' element={<NotFound />} />\n\t\t\t\t</Routes>\n\t\t\t</Suspense>\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>\n);\n"],"sourceRoot":""}